version: '3.8'

services:
  media-service:
    build:
      context: ./server/media-service  # Path to the media-service folder
      dockerfile: Dockerfile
    ports:
      - "8082:8080"  # Map host port 8082 to container port 8080
    environment:
      - MONGO_URI=mongodb://mongo:27017/your_database_name
    depends_on:
      - mongo
    networks:
      - lms-network

  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - lms-network

  inventory-service:
    build:
      context: ./server/inventory-service  # Path to the Express.js microservice folder
    ports:
      - "3001:3000"  # Expose container's port 3000 on host port 3001
    environment:
      - MONGO_URI=mongodb://mongo:27017/your_database_name
    depends_on:
      - mongo  # Ensure MongoDB is up before this service starts
    networks:
      - lms-network

      # email service

  notification-service:
    build:
      context: ./server/notification-service  # Path to the Express.js microservice folder
    ports:
      - "3002:3000"  # Expose container's port 3000 on host port 3002
    environment:
      - EMAIL_USER=cantorlibrarynotification@gmail.com
      - EMAIL_PASS=fkrv gcys cale qxwf

    # depends_on:
    #   - mongo  # Ensure MongoDB is up before this service starts
    networks:
      - lms-network
  
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_INVENTORY_SERVICE_URL=http://inventory-service:3000/api/inventory
      - WATCHPACK_POLLING=true
    volumes:
      - ./client:/app          # Map the local client folder to the container
      - /app/node_modules  
    depends_on:
      - media-service
    networks:
      - lms-network

networks:
  lms-network:
    driver: bridge

volumes:
  mongo-data:
